const { EventEmitter } = require('events');
const awaitableWrap = require('./awaitableWrap');
const {
  LIGHT_STATE_CHANGE_START,
  LIGHT_STATE_CHANGE_SUCCESS,
  LIGHT_STATE_CHANGE_ERROR
} = require('./events');
const { getOnState, getOffState } = require('./states');

/** @typedef {{ on: boolean, bri: number }} LightState */

/**
 * An individual lighting device (e.g., a bulb).
 *
 * @class Light
 */
module.exports = class Light extends EventEmitter {
  /**
   * Creates an instance of Light.
   * @param {Object} apiObject The object from node-hue-api.
   * @param {Object} api A node-hue-api object that can be used to control this light.
   */
  constructor(apiObject, api) {
    super();

    this.id = apiObject.id;
    this.name = apiObject.name;
    this.originalApiObject = apiObject;
    this.timestamp = new Date();
    this.api = api;
  }

  /**
   * Turns the light on.
   *
   * @param {number} brightness A decimal value from 0 to 1,
   *  representing how bright to set the light.
   * @param {number} transitionSeconds The length of time
   *  in seconds that the transition to the new state should last.
   */
  async turnOn(brightness, transitionSeconds) {
    await this.setState(getOnState(brightness, transitionSeconds));
  }

  /**
   * Turns the light off.
   *
   * @param {number} transitionSeconds The length of time
   *  in seconds that the transition to the new state should last.
   */
  async turnOff(transitionSeconds) {
    await this.setState(getOffState(transitionSeconds));
  }

  /**
   * Sets the state of the light.
   *
   * @param {LightState} state A light state object generated by node-hue-api.
   */
  async setState(state) {
    this.emit(LIGHT_STATE_CHANGE_START, state);

    try {
      await awaitableWrap(this.api.setLightState(this.id, state));

      this.emit(LIGHT_STATE_CHANGE_SUCCESS, state);
    } catch (error) {
      this.emit(LIGHT_STATE_CHANGE_ERROR, error);
    }
  }

  /**
   * Gets the state of the light.
   *
   * @returns {Promise<LightState>} A light state object from node-hue-api.
   */
  async getState() {
    let light = await awaitableWrap(this.api.getLightStatus(this.id));
    return light.state;
  }
};
